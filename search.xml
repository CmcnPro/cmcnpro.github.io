<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>构建4G的接码平台</title>
      <link href="/SMS-in-LTE/"/>
      <url>/SMS-in-LTE/</url>
      
        <content type="html"><![CDATA[<p>早在6年前，我就在家里的树莓派上搭建了一个属于自己的<a href="https://ygin.link/raspberry-pi-sms/">接码平台</a>，但是进入2025年以后，这个接码平台接收的延迟越来越大，到最后甚至已经无法接收到短信，而当我把卡去取下来插到我的手机上后才发现，2G&#x2F;3G已经退网了，是时候该把接码平台升级到4G了。  </p><h1 id="购买4G网卡"><a href="#购买4G网卡" class="headerlink" title="购买4G网卡"></a>购买4G网卡</h1><p>六年间，虽然我的接码平台从树莓派升级到PVE的虚拟机，性能强了好几倍，接码平台的细节调整了好几次，但是我的网卡还是那个华为的<code>E173</code>，这是一个WCDMA的网卡，现在2G3G已经退网，我必须选一个支持4G的网卡了。<br>在2025年要去选择一款支持4G的网卡真的挺难了，因为我没有使用开发板，那么IOT上的一些4G模块没法使用，而一些PCIE设备我又没法去搞SIM卡底座，于是USB接口的4G网卡成了我唯一的选择。但是USB的4G网卡可太难找了，随着现在移动端设备的普及，USB的网卡基本上很难有新品了，闲鱼上要么搜出来的都是4G网络的随身Wi-Fi，要么就是<a href="https://wammu.eu/phones/">Gammu数据库</a>里不支持的设备。最后我选择了华为的<code>E3276</code>，这款网卡在Gammu的数据里标记支持短信，但是其他支持一个都没有，而我了解到这个网卡甚至分成了中国版和海外版本，且海外版本存在多个版本。因为我接码的卡在中国大陆使用中国移动的信号，于是最后我在闲鱼花50元购买一款全新未拆封的中国移动定制版的华为<code>E3276</code>，到手拆封才发现这是个2013年出4G网卡，已经存放了12年了，幸运的是产品是好的。这张网卡支持TDD-LTE和FDD-LTE，满足我的需求。  </p><h1 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h1><p>把USB网卡插上后，真就是一步一个坑。  </p><h2 id="模式切换"><a href="#模式切换" class="headerlink" title="模式切换"></a>模式切换</h2><p>插上网口后，我使用<code>lsusb</code>想看看设备的情况，系统输出  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看USB设备</span></span><br><span class="line">~ $ lsusb</span><br><span class="line">Bus 001 Device 016: ID XXXX:YYYY Huawei Technologies Co., Ltd. Modem (Mass Storage Mode)</span><br></pre></td></tr></table></figure><p>我的USB网卡使用的是存储模式，这个其实很正常，一般网卡这种产品插入Windows后识别成存储设备方便用户去安装驱动，这一两年无论是Windows 10和Windows 11都自带了大量的兼容驱动用户体验无感很多，但是这是一个12年前的产品，那个时候大量的用户还是使用着Windows 7，于是第一步我需要把他从存储设备改成Modem <del>（写到这的时候我思考了半天Modem的中文是啥，调制解调器，二十多年没听过的名字了）</del>，修改模式需要使用<code>usb_modeswitch</code>，使用的方法为<code>sudo usb_modeswitch -v VID -p PID</code>，其中<code>VID</code>和<code>PID</code>需要根据自己设备来修改，切换后<code>VID</code>和<code>PID</code>会可能发生变化。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~ $ lsusb</span><br><span class="line">Bus 001 Device 020: ID XXXX:ZZZZ Huawei Technologies Co., Ltd. Modem/Networkcard</span><br></pre></td></tr></table></figure><p>可以看到切换后我的设备的<code>PID</code>发生了变化，设备后面也明确标记出当前的状态。<code>/dev/</code>目录下也出现了多个<code>ttyUSB*</code>设备。<br>但是如果USB设备发生断开重新连上后，它又会回到存储模式，因此我们需要在<code>udev</code>中去修改它的模式。<br>首先需要创建一个规则，路径在<code>/etc/udev/rules.d/</code>里，注意<code>udev</code>是存在优先级关系的，你可以在互联网上找到<code>udev</code>的使用说明。<br>我们需要在<code>udev</code>的规则里增加这样一段：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACTION==&quot;add&quot;, SUBSYSTEM==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;XXXX&quot;, ATTRS&#123;idProduct&#125;==&quot;YYYY&quot;, RUN+=&quot;/usr/sbin/usb_modeswitch -v XXXX -p ZZZZ -M &#x27;YOURMESSAGECONTENT&#x27;&quot;</span><br></pre></td></tr></table></figure><p>其中XXXX为你设备的<code>VID</code>,YYYY为存储模式下<code>PID</code>，ZZZZ为切换为网卡模式后的<code>PID</code>，-M的内容为你网卡的<code>messageContent</code>，这个信息建议你在互联网使用设备存储模式下的<code>VID</code>和<code>PID</code>去搜寻。<br>修改好规则后使用<code>sudo udevadm control --reload-rules</code>来使规则生效。  </p><h2 id="让接码平台持久化"><a href="#让接码平台持久化" class="headerlink" title="让接码平台持久化"></a>让接码平台持久化</h2><h3 id="设备别名"><a href="#设备别名" class="headerlink" title="设备别名"></a>设备别名</h3><p>上面我们使用<code>udev</code>让设备常驻为了网卡模式，这六年来我的接码平台遇到过USB断开重连导致<code>ttyUSB*</code>发生变化情况，于是我们还可以使用<code>udev</code>来给网卡别名以方便Gammu的配置文件里固定设备名。<br>还是一样的编辑<code>udev</code>的规则，添加这样一行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KERNEL==&quot;ttyUSB*&quot;, ATTRS&#123;idVendor&#125;==&quot;XXXX&quot;, ATTRS&#123;idProduct&#125;==&quot;ZZZZ&quot;, MODE:=&quot;0777&quot;, SYMLINK+=&quot;YOURALIAS&quot;</span><br></pre></td></tr></table></figure><p>这里的<code>VID</code>和<code>PID</code>需使用设备在网卡模式下的<code>VID</code>和<code>PID</code>，<code>SYMLINK</code>为你自定义的别名。<br>到这一步后我们就可以在<code>Gammu-smsd</code>的配置文件中固定我们的设备名了。  </p><h3 id="给Service增加Timer"><a href="#给Service增加Timer" class="headerlink" title="给Service增加Timer"></a>给Service增加Timer</h3><p>我以前就给<code>Gammu-smsd</code>增加了Service，但是这六年来，服务会因信号等各种原因报错失效，于是我们可以增加Timer来让自动重启来保障SLA，路径为<code>/usr/lib/systemd/system</code>。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=gammu-smsd timer</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line">Unit=gammu-smsd.service</span><br><span class="line">OnUnitActiveSec=30min</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=timers.target</span><br></pre></td></tr></table></figure><h3 id="配置分享"><a href="#配置分享" class="headerlink" title="配置分享"></a>配置分享</h3><p>记录分享下我的现在的<code>Gammu-smsd</code>和转发<code>Telegram-bot</code>的配置与脚本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Configuration file <span class="keyword">for</span> Gammu SMS Daemon</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Gammu library configuration, see gammurc(5)</span></span><br><span class="line">[gammu]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Please configure this!</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请根据自己的实际情况修改配置</span></span><br><span class="line">port = /dev/USB-TDDLTE</span><br><span class="line">connection = at19200</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debugging</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">logformat = textall</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SMSD configuration, see gammu-smsdrc(5)</span></span><br><span class="line">[smsd]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">收到短信后的执行的脚本</span></span><br><span class="line">RunOnReceive=/root/receive-sms.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志存储</span></span><br><span class="line">service = files</span><br><span class="line">logfile = /var/log/gammu/gammu-smsd-$1.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Increase <span class="keyword">for</span> debugging information</span></span><br><span class="line">debuglevel = 0</span><br><span class="line"></span><br><span class="line">CheckSecurity = 0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Paths <span class="built_in">where</span> messages are stored</span></span><br><span class="line">inboxpath = /var/spool/gammu/inbox/</span><br><span class="line">outboxpath = /var/spool/gammu/outbox/</span><br><span class="line">sentsmspath = /var/spool/gammu/sent/</span><br><span class="line">errorsmspath = /var/spool/gammu/error/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">多段短信超时时间（系统默认是600s）</span></span><br><span class="line">MultipartTimeout=5</span><br></pre></td></tr></table></figure><p>相对六年前，增加了日志的存储和修改了长短信的分段超时时间。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">短信转发Telegram脚本</span></span><br><span class="line">TOKEN=&quot;YOUR-TELEGRAM-BOT-TOKEN&quot;</span><br><span class="line">CHAT_ID=YOUR-TELEGRAM-CHAT-ID</span><br><span class="line">URL=&quot;https://api.telegram.org/bot$TOKEN/sendMessage&quot;</span><br><span class="line">DATE=`date +&#x27;%Y/%m/%d %H:%M:%S&#x27;`</span><br><span class="line">for i in `seq $SMS_MESSAGES` ; do</span><br><span class="line">          #eval &quot;curl -s -X POST $URL -d chat_id=$CHAT_ID -d text=\&quot;\$&#123;SMS_$&#123;i&#125;_TEXT&#125;\&quot;&quot;</span><br><span class="line">          eval &quot;curl -s -X POST $URL -d chat_id=$CHAT_ID -d text=\&quot;\$&#123;SMS_$&#123;i&#125;_NUMBER&#125;: \$DATE %0A=============================%0A\$&#123;SMS_$&#123;i&#125;_TEXT&#125;\&quot;&quot;</span><br><span class="line">  done</span><br></pre></td></tr></table></figure><p>相对六年前，增加发信人的显示，增加了接收到短信的时间，如果需要查看短信发送的日期时间请前往<code>/var/spool/gammu/inbox/</code>查看文件名。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Telegram-Bot </tag>
            
            <tag> SNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聊聊AIO和虚拟机恢复</title>
      <link href="/VM-HomeLab/"/>
      <url>/VM-HomeLab/</url>
      
        <content type="html"><![CDATA[<p>早在六年前，我就开始在家里使用<a href="/ProxmoxVE-and-LEDE/">PVE构建的AIO</a>，多年使用下来，随着环境的变迁，设备也升级了几次，也踩了坑，总结了很多经验，是该写点笔记记录一下了。前段时间硬盘挂了一次，如果你只是想看我怎么去做PVE坏境的恢复的请跳转<a href="#PVE%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D">2.PVE 备份与恢复</a>。  </p><h1 id="构建AIO"><a href="#构建AIO" class="headerlink" title="构建AIO"></a>构建AIO</h1><h2 id="什么是AIO"><a href="#什么是AIO" class="headerlink" title="什么是AIO"></a>什么是AIO</h2><p>AIO，是<code>ALL In One</code>简写，在简中互联网普遍指的是将多个虚拟机或者服务部署在一台物理设备上去使用的方式，在家庭环境Homelab中使用普遍，相对于部署多台物理设备，可以大量降低在家庭环境中所占的物理空间，减少拉线数量。坏处呢也很明显，如果这台物理设备出现问题，所有服务都会出现故障，故有时也戏称<code>ALL In Boom</code>。<br>部署的服务有很多，但是在简中圈子离不开的一个东西就是软路由，所以在你去搜索<code>OpenWRT</code>和<code>iKuai</code>等信息时，会看到大量相关的信息。<br>AIO部署方式有很多，有大佬自己选择一个系统从零到有自己全程手搓的，也有采用<code>PVE</code>和<code>ESXI</code>等虚拟化环境去构建。  </p><h2 id="AIO硬件选型"><a href="#AIO硬件选型" class="headerlink" title="AIO硬件选型"></a>AIO硬件选型</h2><p>AIO的选型有个一个非常关键的因素：你的需求。<br>不要瞎听别人说什么“PCI-E 4.0的M2盘跑的贼快”，“XXX显卡&#x2F;集显做二次编码效率贼高”，首先，你先确定你的需求。就以软路由为例，虽然现在40G的网卡只要45元，但是你要换成支持PCI-E板子，还要买二手网卡二手线，还有去考虑散热等等。但是你回头想想你家就300M的签约宽带，家庭设备也是1G内网，甚至都没有独立的物理NAS，或者NAS也不是全闪，那45元的40G网卡对你来说完全没用，你不如去买箱可乐喝了还更快乐一点。所以确定你的需求再来硬件选型。<br>如果你的设备短期内不会换2.5G网口，那么你的AIO上个双千兆口就行；<br>如果你不需要长时间的跑编译、渲染、计算等需求，那么你的CPU显卡也不需要很强；<br>如果你的宽带出口只有300M，它甚至都喂不饱J4125，AES加密下的J4125都可以跑满1000M，你真的不用考虑更多性能;<br>如果你没有大量虚拟机或者存储需求，内存和硬盘也不需要很多。<br>BTW，个人推荐存储和AIO分开，因为你真的不想“ALL in boom”的时候，把你的数据也带走。<br>所以要玩AIO前，先看看自己家有哪些老旧设备，能利旧就利旧，如果新购且没有大量存储需求下，现在的一些迷你主机真的不错。<br>请记住：高性能-&gt;高热量-&gt;高噪音，当晚上夜深人静的时候，听到那风扇呼啦啦的转着想想你的家人想不想打你。当然富哥如果有专属的地下室机房都当我没说。  </p><h2 id="虚拟化选择"><a href="#虚拟化选择" class="headerlink" title="虚拟化选择"></a>虚拟化选择</h2><p>虚拟化的选择有很多，但是简中圈子喜欢的虚拟化选择有两个<a href="https://www.proxmox.com/">Proxmox Virtual Environment</a>（以下简称<code>PVE</code>）和 <a href="https://www.vmware.com/products/cloud-infrastructure/vsphere">VMware ESXi</a>（以下简称<code>ESXI</code>），这俩各有各的特点，我个人选择的是<code>PVE</code>。<br><code>PVE</code>的安装很简单，基本上就是一路下一步，互联网上也有数不清的教程，无论是PVE自身的安装还是虚拟化的系统安装其实就是装系统也没啥说的，互联网上搜搜或者翻翻我6年前的笔记就行。<br>不过有点小建议给大家，你的设备存在多个网口，安装PVE时候建议找一个网口插上网线接上网络，这样你在安装PVE设置IP的时候方便知道当前设置的是哪个网口。  </p><h1 id="PVE备份与恢复"><a href="#PVE备份与恢复" class="headerlink" title="PVE备份与恢复"></a>PVE备份与恢复</h1><h2 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h2><p>2024年的圣诞节晚上，我突然听到我的机柜传来一阵起飞的风扇声，对于家庭环境而言，风扇起飞大概率就出现问题了，我尝试进入PVE的web管理看看发生了什么，但是发现已经显示连接被重置，可ping通，但SSH也拒绝。尝试访问部署在上面的服务，均出现了部分功能失效，包括作为网关的OpenWRT，不过万幸的是OpenWRT的网络功能正常没有断网，家里的设备依旧还可以和互联网保持通讯，但是其他功能也基本失效不可用了。给设备插上显示器后，看到了PVE后台大量的报错：“IO error,rotating”，硬盘坏了，尝试插上USB键盘，发现USB也无法驱动，我知道这个硬盘应该是挂的很彻底。<br>这个盘是我在2018年买的黑片盘，当初在PC上作为跑IO的缓存盘，后来感觉性能出现问题，响应时间增高后，就把他丢到NAS上作为BT盘使用，但是因为存储空间太小，只有240G，于是给NAS换成了美光的1T企业盘跑下载，这个盘就闲置了。后来新购AIO服务器，想着家里设备利旧，就把它作为AIO的系统盘使用，为啥我敢这么当“亡命之徒”？因为我的AIO基本上对IO的需求为0，是个盘就行。然而没用到两个月，它挂了。<br>也正是因为我知道它可能会挂，所以在PVE上，我有设置备份到NAS上。  </p><h2 id="PVE挂载NAS存储"><a href="#PVE挂载NAS存储" class="headerlink" title="PVE挂载NAS存储"></a>PVE挂载NAS存储</h2><p><img src="/images/PVE_Mount_NAS.png" alt="PVE存储设置"><br>在PVE的存储设置里面可以去很方便的挂载我们存储，因为我的NAS有开SMB，我选择的SMB，如果你的有使用NFS或者iSCSI，请选择对应的协议。<br>一些具体的东西可以翻阅<a href="https://pve.proxmox.com/pve-docs/pve-admin-guide.html#chapter_storage">官方文档</a>。<br>在添加的存储的时候，有个叫做内容的选择，你可以粗暴的理解成这个一些子文件夹，里面只会放着对应的一些东西。  </p><table><thead><tr><th align="left">内容类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">磁盘映像</td><td align="left">QEMU&#x2F;KVM 虚拟机镜像</td></tr><tr><td align="left">ISO镜像</td><td align="left">ISO 镜像</td></tr><tr><td align="left">容器模板</td><td align="left">vztmpl 容器模板</td></tr><tr><td align="left">VZDUMP 备份文件</td><td align="left">backup 虚拟机备份文件</td></tr><tr><td align="left">容器</td><td align="left">rootdir 容器镜像数据</td></tr><tr><td align="left">片段</td><td align="left">Snippet 文件，例如客户机 hook 脚本</td></tr><tr><td align="left">导入</td><td align="left">官方文档没写 我也不知道啥</td></tr></tbody></table><p>我因为需要将虚拟机完整的备份到NAS上，所以我这里将NAS的存储挂载为<code>VZDUMP 备份文件</code></p><h2 id="备份与恢复PVE虚拟机"><a href="#备份与恢复PVE虚拟机" class="headerlink" title="备份与恢复PVE虚拟机"></a>备份与恢复PVE虚拟机</h2><h3 id="手动备份"><a href="#手动备份" class="headerlink" title="手动备份"></a>手动备份</h3><p><img src="/images/PVE_Mount_NAS_2.png" alt="PVE备份设置"><br>选中需要手动备份的虚拟机，点击备份-立即备份即可。  </p><h3 id="手动恢复"><a href="#手动恢复" class="headerlink" title="手动恢复"></a>手动恢复</h3><p><img src="/images/PVE_Mount_NAS_3.png" alt="PVE恢复设置"><br>打开有备份的存储，选择备份，选中需要手动恢复的虚拟机，点击还原即可。  </p><h3 id="设置自动备份计划"><a href="#设置自动备份计划" class="headerlink" title="设置自动备份计划"></a>设置自动备份计划</h3><p><img src="/images/PVE_Mount_NAS_4.png" alt="PVE自动备份设置"><br>可按需设置自动备份计划。</p>]]></content>
      
      
      
        <tags>
            
            <tag> DIY </tag>
            
            <tag> AIO </tag>
            
            <tag> PVE </tag>
            
            <tag> virtualization </tag>
            
            <tag> Homelab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何打造自己的家庭网络</title>
      <link href="/home-network/"/>
      <url>/home-network/</url>
      
        <content type="html"><![CDATA[<p>现代社会每个人都离不开互联网，很多人认为网络卡了就是路由器不行，签约的宽带的不够用了，我就有一个朋友7年内找了我3次，每次都是网络卡了，问有没有新的路由器推荐，从199买到599，但是事实上真的是这样么？利用自己装修房子这个事情，补个笔记，尽可能用通俗的语言，让你姥姥也能根据这个笔记去设计打造你家的网络。  </p><h2 id="确定需求"><a href="#确定需求" class="headerlink" title="确定需求"></a>确定需求</h2><p><em><strong>请注意，这里的弱电布网的需求是从装修房子开始的，而弱电只是家装中很小很小的一点，请自行规划好需求和预算。</strong></em></p><p>这几年，无论是小红书还是抖音等上面太多的家装博主做分享，什么智能家居啊，家庭影音啊，WiFi啊等等，但是那些东西不一定适合你，如何确定你自己的需求才是重要的。<br>那么什么才是自己的需求，首先最基本的需求就是大家最爱说的“不卡的网络”，那什么叫不卡的网络？大家会说“网速快的网络”。如果我们把整个家看作一个整体，那么家的网络快不快的最最重要的就是你在运营商所签约的宽带，据我了解，目前四大运营商所提供的家宽签约最低的带宽是100Mbps，100Mbps什么概念，如果以下载文件为例，那么差不多12.5MB&#x2F;s就算跑满你的宽带，理论上来说这个速度对于在线观看4K流媒体电影都不成任何问题，但是为啥你打游戏或者刷短视频的时候会卡？你的家的WiFi信号的强度和稳定性也是你家网络的最基本的需求。<br>所以，家庭的网络的最基本的需求：一个满足需求的签约宽带 + 良好的网络传输媒介（WiFi信号等）。  </p><h3 id="宽带选择"><a href="#宽带选择" class="headerlink" title="宽带选择"></a>宽带选择</h3><p><em><strong>懒人省流版：家庭用网人数 x 75Mbps&#x3D;你的带宽需求</strong></em>    </p><p>宽带选择上首先第一步是选择四大运营商的哪一家，但是这个东西有极强的地域性，甚至哪怕同一个片区不同的小区也不一样，这个只能按照各位实际情况去选择。<del>我家宽只用中国电信</del><br>第二步就是带宽选择，现在运营商新签约的最低都是100Mbps，这个宽带对于在线看4K流媒体，打网游完全够了，但是如果你想更新游戏快一点，下载东西快一点，那么请按需选择更大的宽带，至于是300Mbps还是1Gbps，取决你想要多快更新完游戏，仅此而已。对于家庭搞直播的，这个需要的上行带宽，如果你以直播赚钱谋生，请自己与运营商谈，至少我遇到过我这个家宽（75Mbps的上行）因为直播上行流量太大，被运营商误以为是PCDN封了上行。</p><h3 id="内网需求"><a href="#内网需求" class="headerlink" title="内网需求"></a>内网需求</h3><p>家庭内部的网络就是内网，内网分成两部分：有线和无线。<br>无线其实就是现在大部分设备的信号问题，信号强不等于网速快，但是信号不强网络肯定不稳定，那么选择天线多的路由器就一定OK？其实很多路由器，包括一些大厂都有假天线，而天线的数量并不关心信号的强度，那个只是几T几R，你可以理解成是几个车道，一般来说，我们的手机都是2T2R，多的车道是用不到的，信号强度和功放有关，而选择AP设备的功放确实一个非常黑盒的事。而在无线布网里面有句话叫做“信号不够，数量来凑”，将老路由器利旧说不定是更好的选择。<br>有线其实可以理解成高速公路的限速，他不关心你的车能跑多快，但是这条路限速了你肯定跑不快。对于绝大部分家庭场景而已，千兆内网可以满足需求了，至于要剪视频赚钱工作的场景，你们应该知道自己需要多大的内网。线缆的选择后面我讲具体布网的时候我会细说。</p><h2 id="弱电布网"><a href="#弱电布网" class="headerlink" title="弱电布网"></a>弱电布网</h2><p>绝大部分的装修公司工作人员都不懂网络，他们不犯错就是万幸，设计师里面懂网络拓扑的少之又少，而专业的弱电施工队基本上不会接家庭的布线。所以能自己设计就自己设计，你补一周的课就比他们强了。</p><h3 id="弱电箱"><a href="#弱电箱" class="headerlink" title="弱电箱"></a>弱电箱</h3><p>先说一个暴论：基本上的开发商装的弱电箱都不能满足现在家庭网络场景，要么小了，要么线不够。<br>如果你要把你光猫、路由器等设备都放到弱电箱里，请自行换一个大的弱电箱，先不说散热这个事，开放商装的弱电箱一般都放不下。如果你不愿意换弱电箱，那么和我一样把设备从弱电箱搬出来也是一种选择。</p><h3 id="网线"><a href="#网线" class="headerlink" title="网线"></a>网线</h3><p>网线也是家装里面的一个大坑，为什么呢？因为线材市场有成千上万的垃圾线材，大量山寨高仿的名字，开发商、装修公司用低劣线材的太多了。对于大部分家庭来说，他们能从网络上获取到超5类、6类网线的知识已经到尽头了，但是对于一个山寨品牌的线，他上面打的cat6a就一定是真的cat6a么。正规品牌远远比那个线标重要。像是TP-link、秋叶原、海康虽然他们的线在专业工程布线领域不是那么好，但是至少他们是普通消费者在京东能买到的靠谱网线之一，应该比你买到山寨线可靠。<br>那么接下来我们来说线的规格，五类cat5、超五cat5e、六类cat6、超六cat6a、七类cat7。会有装修队给你说什么要6类才能跑千兆内网。请记住：好的超五就可以在60米以内跑万兆（防杠：这里指的设备跑到而不是指过福禄克的检测），所以家装场景超五即可满足需求了，不要选五类，那个只有100M，至于六类看需。<br>水晶头一样的，五类线选五类头，六类线选六类头，买大品牌然后希望施工师傅手艺好点。<br>原则上不推荐任何带屏蔽或者需要接地的，不是他们不好，而是他们需要的线材质量和手艺要求比较高，搞不好甚至效果比你用超五还差。<br><del>我用的大唐电信的超五+安普的5类水晶头和模块，实现2.5G内网，你们不要直接照抄一是价格比较贵二是安普你们很难买到真货。</del> </p><h3 id="光纤"><a href="#光纤" class="headerlink" title="光纤"></a>光纤</h3><p>可以有，但是没必要。东西其实比网线还便宜，但是你家里的绝大部分东西都是电口而不是光口，你还需要在终端处加设备，真的没必要。<br>现在各家运营商都推出了全屋光纤的方案fttr，其实就是帮你在家里部署透明光纤，然后使用他家的定制的子母光猫，几乎不可能自我更换升级。如果你真的很懒可以选那个方案。  </p><p>布线具体情况具体的分析，但是有一个保底的方案给到大家：<em><strong>光猫到客厅电视墙两根线，你家的网络中枢到每个房间一根线</strong></em>。<br>现在的家宽都基本上携带了IPTV，无论你家里的老人小孩看不看电视，光猫一根线到客厅的IPTV，另外一根走互联网接你的路由器（或者AC），家庭场景里面客厅肯定是要做WiFi覆盖了，我相信很多人也会选择将路由器装一个在客厅电视墙，那么对于光猫不在客厅的电视墙的家庭，光猫到客厅的两根线就变得很重要了。<br><img src="/images/home_network_1.png">  </p><p>上图的左边就是开发商的网络拓扑，弱电箱一共只有3根线出来，分别电视墙的网络面板一根、到房间的线2根（有个房间没布网），按照开发商这个方案，不动线的情况下，你家的光猫、路由器都只能放在入户处的弱电箱里，如果只是用一个无线路由器的情况下，请问三个房间如何做到无线网络的保证呢？所以这个网络方案是非常糟糕的。<br>右边则是我改造的方案，我自己从弱电箱到电视墙拉了两根皮纤，直接放弃弱电箱，让光猫直接在电视墙，然后光猫的IPTV直接接电信的电视盒子，互联网的网线直接接入到我位于书房的弱电机柜里，然后再从书房回到电视墙，然后利用电视墙的路由器（起AP+2.5G交换机的作用）分发到几个卧室的面板AP上。<br><del>其实我这个方案把软路由（或者AC）放到电视墙，这样书房就少一根线，就和很多家庭的方案一样了，只是因为我的软路由是主动散热，我放在我的机柜里可以更好的散热同时噪音不会对客厅造成影响。</del><br>出于成本的考虑，我这套方案里面选择使用的2.5G路由器+2.5G交换机来实现的，其维护成本和美观性其实是不如AC+AP方案的，对于有家庭的而言，如果选择将设备藏于吊顶里其实也是更好的选择。<br>现在电商和自媒体爱讲的mesh，请记住mesh不是唯一的组网方式，他的优点有且仅有在没法布线的情况下，可以傻瓜式一键组网。mesh其实就是无线组网各种东西的一键整合，让小白用户也能组网而已，至于组出来的网是不是最优解就不一定了。  </p><p>所以家庭布网怎么设计？将你的网络中枢放在一个到每个房间都方便的地方，然后布好需要用网的房间数+2（电视墙）根网线，如果你的光猫放电视墙，那么电视墙的两根你可以走明线，只需要每根房间拉网线即可，请记住一定要装86底盒，这样无论是使用传统的网络面板还是上面板AP都可以做到美观。如果你是和我一样在家装时就布线了，我建议选择ac+ap的方案，不选mesh的原因一是美观，二是后期维护升级成本低。当你的网线都布好以后，你真的不需要mesh这种东西。</p><h2 id="设备采买"><a href="#设备采买" class="headerlink" title="设备采买"></a>设备采买</h2><p>定下布网方案后就可以采买设备了。<br>网线水晶头请直接选择大品牌的京东自营，如果不想学自己做水晶头，那么请找一个靠谱的师傅让他给你慢慢做。<br>86网络面板，动手能力强可以自己买好的模块自己组，但是如果你想偷懒，就公牛的千兆网络面板够了，如果你和我一样要搞2.5G内网请自己动手。<br>关于路由器和AP里面的WiFi信号，请记住电商里面那个巨大数字，什么AX3600，BE5100等等其实是他们所有网络信号加起来的带宽总和，你的网络跑不到那个数字的，原因很简单，他们的有线网口的带宽都比那个数字小，深度一点的就是什么4096QAM不兼容啥的。所以对于绝大部分家用场景而言，花大价钱买高规格的WiFi路由器，不如多买几个低端的路由器或者AP，还是那句话，信号不够，数量来凑。<br>那么到底需要多高规格的WiFi呢？以300Mbps的签约宽带为例，那么AX3600规格的路由器，2.4G理论上最高可以提供574Mpbs，5G可以提供2402Mbps，以70%计算，那么2.4G就可以跑满你家的300Mbps的出口了。在信号不成问题情况下AX3600就可以完全跑满你家的宽带了，但是现实生活中高规格的无线设备，其信号用料等是完全好于低规格的无线设备的，所以无线信号点的规格和数量是需要你自己去抉择的。<br><em><strong>在使用高规格WiFi设备时，某些技术和规格因涉及到一些法律法规，在你所在地不一定可合法使用，请遵守当地无线电管理。</strong></em></p><p>以下是我的清单：</p><ul><li>TP-link 7DR5160</li><li>TP-link 7DR5130</li><li>TP-link 7AP5100HI-POE</li><li>Tenda TEM2021F <del>都过了7天才发现买成老款了，新款更便宜还支持10G上联</del></li></ul><p> 我的方案是全屋2.5G内网+5GWiFi全覆盖，如果你们要自己做，建议买一把老A的网线钳，好的工具会让你的线的质量提高很多。</p><h2 id="验收"><a href="#验收" class="headerlink" title="验收"></a>验收</h2><p>对于大部分家庭来说，他们唯一验收网络的能力就是就是看下载速度能跑多少，那么推荐一个APP，TP-link公司出的<code>网络百宝箱</code>，iOS和Android都有，对于大部分人来说完全够用了，如果你想测试下自己内网的情况，<a href="https://github.com/esnet/iperf">iperf</a>作为一个老牌的工具值得信赖，不过你需要自己学习下如何使用它。</p><p>以上为家庭组网的基础部分，接下来是如何调教部署家庭环境。</p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><h3 id="光猫-x2F-网关"><a href="#光猫-x2F-网关" class="headerlink" title="光猫&#x2F;网关"></a>光猫&#x2F;网关</h3><p>光猫大家应该都知道，就是你去运营商办理宽带后，电信装维安装在你家的那个设备，下面接你家的路由器、IPTV的那个小盒子，一般来说，用户没法自行去配置它的核心配置的。而什么是网关呢，科班点的说法就是将两个不同网络连接起来的设备，但是简单点就是网关就是你家的大门，对于大门外的人来说，你家的无论任何人都称为“XXX家的”，你家内部怎么去分外面的人不关心，所以对于绝大部分人而言，默认配置下的光猫就是你家最上面的网关。<br>现在市面上有很多的家用路由器，不进行一些特殊的操作外，那些路由器本身也是一个网关，那么如果你直接把他接入你家的网络，那么你家的网络会变成什么样子？光猫（网关一）-&gt; 路由器1（网关二）-&gt; 路由器2（网关三）。<br>这个时候，站在光猫的角度来看，你家只有一个设备，叫做路由器1，站在路由器1角度来看，你家有连在路由器1下的手机和路由器2。<br>这种情况下有哪些问题呢？  </p><ul><li>家庭网络下的设备互联出现问题，举个例子，假设你家的电视接在路由器1下，你的手机接在路由器2下，这时，你进行投屏，手机可通过DLNA告诉电视播放的资源，但是如果你的电视在路由器2下，你的手机在路由器1下，因为路由器2本身也是一个网关，你手机在路由器2的大门外，这时你就没办法投屏了。  </li><li>NAT问题，很多玩主机的人练级的时候会看到NAT等级什么的，其实这个和第一个是一个东西，但是对于又在玩游戏主机的人而言，他们更关心和朋友P2P游戏时的快乐，不关心内网的情况。</li><li>下层路由器的包转发能力，这种在老旧路由器利旧的情况下且容易出现，厂家不会去宣传介绍这个东西，但是为啥你快速刷抖音、抢红包就是比其他人顿一点，没那种机制的响应？</li></ul><p>当然这种组网方式也有自己的优点：第一次上手方便。<br>那么怎么组网会更加科学点？一种比较通用的方式：全家只设立一个网关，所有下层终端放在同一个局域网里面。<br>我们介绍过，光猫默认下就是一个网关，但是光猫可以设置成不是网关，也就是<code>光猫桥接</code>，利用<code>光猫桥接</code>可以将拨号等操作交给路由器来处理，好处呢就是取消了一道门，减少了一层NAT，并且一般而言运营商给的光猫的性能也是比较差的，光猫变成一个存储的光转电设备后，也可以降低它的功耗，让他在夏日也更加的稳定可靠点。那么怎么去<code>光猫桥接</code>？打运营商客服电话即可。当然如果你家的主路由比光猫还差就别这样改了。  </p><h3 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h3><h4 id="子路由取消网关"><a href="#子路由取消网关" class="headerlink" title="子路由取消网关"></a>子路由取消网关</h4><p><em>这里不涉及AC+AP和Mesh这两种情况，因为他们本身接入点设备就是不启用NAT的</em><br><em>以下用TP-link家的消费级路由器为例</em><br><img src="/images/home_network_2.png"><br>TP-link的路由器上网设置有这些选项  </p><ul><li>自动获得IP地址 </li><li>固定IP地址</li><li>宽带拨号上网</li><li>AP（有线中继）</li><li>桥接（无线中继）</li></ul><p>自动获得IP地址和固定IP地址这俩选项都必须上层有网关设备，宽带拨号上网这个选项是我们的主光猫，也就是直接接<code>光猫桥接</code>模式下的光猫的路由器才使用的选项。选择AP、桥接可以满足我们取消子路由网关的需求。其中AP代表着你需要有线连接两个路由器，而桥接则需要无线连接，这里还是建议能有线还是有线吧。  </p><p><del>这里吐槽一下TP-link的消费级和商业级设备区别。TPlink的消费级在AP模式下，不可手动编辑LAN的IP地址，但是企业级可以，也就是为了维护方便，我必须在我的网关的DHCP中手动给它指定IP地址。我在想如果有一天我的网关的DHCP寄了，我甚至维护AP模式下的设备入口都没有。</del>  </p><p>上面是TP-link的操作方法，对于所有的消费级设备，如果你实在是搞不懂它们写的各种标注，一种通用解：关闭子路由的DHCP然后有线网线插入LAN口。  </p><p><del>一些厂家出的消费级的东西，上面标注和操作逻辑真的让人摸不着头脑，反而专业性更强的商业级产品，写的清清楚楚明明白白。</del>  </p><h4 id="无线设置"><a href="#无线设置" class="headerlink" title="无线设置"></a>无线设置</h4><h5 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h5><ul><li>不要把WiFi密码设置成和路由器的管理后台密码一样</li><li>密码请包含数字、英文、符号</li><li>加密方式选择WPA3-SAE</li></ul><h5 id="信号设置"><a href="#信号设置" class="headerlink" title="信号设置"></a>信号设置</h5><p><strong>请严格遵守所在地的相关无线电管理相关规定</strong><br>首先第一步请在手机上装好检测WiFi的APP，这里推荐UBNT家出的<code>WiFiman</code>或者TP-link家的<code>网络百宝箱</code>，其中<code>WiFiman</code>更加美观容易上手，而<code>网络百宝箱</code>更加符合中国国情。<br>首先，根据中国的无线电管理等相关法律法规，WiFi可以分成2.4G和5G两种，其中5G又可以细分成5.2G和5.8G。你可以简单的理解成2.4G速度比5G慢，但是信号范围更大，抗干扰更强，5G快，但是信号覆盖小，衰减更厉害。家里的大部分智能家电，一般都是只支持2.4G，我们的手机电脑都是可以支持5G的。<br>在WiFi设置里有很多名词，那么他们到底是什么意思呢？<br>信道：你可以理解成车道，车道车越多是不是越慢？同理当你家某个wifi信号的信道旁边和邻居撞车了那是不是也就慢了？所以所出的地方，选择一个不那么拥挤的信道可以大幅度提升你的网络体验。<br>2.4G下无线信号有13个，5.2G有36、40、44、48、52、56、60、64，5.8G有149、153、157、161、165。<br>频宽：你可以粗暴的理解成要占几根车道，频宽有20Mhz、40Mhz、80Mhz、160Mhz。频宽越大，速度越快，距离衰减更严重。<br>信道和频宽就是我们WiFi信号非常重要的两个设置，我们应该在干扰比较小的信道下尽可能用大频宽，而在干扰比较大的信道下选择小频宽来保证我们的上网体验。<br>如果某些信道+频宽不可组合，或者选择后无效，这说明可能与你所在的无线电管理有关。<br>如果你购买的最近新出的一些路由器，里面有诸如<code>MU-MIMO</code>、<code>OFDMA</code>、<code>MLO</code>选项，可以无脑打开。  </p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这篇家庭组网断断续续写了几个月，一是忙，二是确实也是自己完完全全弄完整套网络才知道有哪些坑，把专业的东西用通俗的话讲出来真的挺难的。其实后面还有关于怎么去构建软路由，怎么去玩一些NAS的玩法，怎么构建的家庭娱乐平台，怎么去针对PCDN去做防范，宽带移机时被电信弄下的坑等等一些东西，这几年下来遇到的各种坑各种经验，只能以后再写新的文章来记录分享下了，当然关于家庭组网的一些更新还是会更新在本文的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> DIY </tag>
            
            <tag> NAS </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生苦短，我用……</title>
      <link href="/awesome-tools/"/>
      <url>/awesome-tools/</url>
      
        <content type="html"><![CDATA[<h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><h2 id="PC"><a href="#PC" class="headerlink" title="PC"></a>PC</h2><table><thead><tr><th align="left">部件</th><th align="left">型号</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="left">AMD Ryzen™ 7 5800X3D</td></tr><tr><td align="left">主板</td><td align="left">ASUS TUF GAMING X570-PLUS (WI-FI)</td></tr><tr><td align="left">内存</td><td align="left">ACER Predator Vesta 32GB(16GBx2) 3600C16</td></tr><tr><td align="left">显卡</td><td align="left">GALAX GeForce RTX™ 3080 Ti HOF OC Lab Edition</td></tr><tr><td align="left">硬盘</td><td align="left">SAMSUNG SM961 256GB <br> CRUCIAL MX300 525GB <br> SAMSUNG PM983a 960GB</td></tr><tr><td align="left">机箱</td><td align="left">PHANTEKS ECLIPSE P500A (NON-RGB)</td></tr><tr><td align="left">电源</td><td align="left">SUPER FLOWER Leadex Gold 1000W</td></tr><tr><td align="left">网卡</td><td align="left">TP-LINK TL-NG421 2.5G PCIe (Realtek RTL8125B)</td></tr><tr><td align="left">CPU散热</td><td align="left">NZXT Kraken X62 <br> ARCTIC P14 PWM PST CO x2</td></tr><tr><td align="left">机箱散热</td><td align="left">ARCTIC P14 PWM PST CO x4</td></tr><tr><td align="left">显示器</td><td align="left">INNOLUX 31.5 4K144Hz FAST-IPS</td></tr></tbody></table><table><thead><tr><th align="left">部件</th><th align="left">型号</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="left">AMD Ryzen™ 7 3700X</td></tr><tr><td align="left">主板</td><td align="left">ASUS TUF GAMING B550M-PLUS (WI-FI)</td></tr><tr><td align="left">内存</td><td align="left">GALAX HOF OC Lab Aurora II 16GB(8GBx2) 3600C16</td></tr><tr><td align="left">显卡</td><td align="left">GIGABYTE GeForce™ GTX 1080 G1 Gaming 8G</td></tr><tr><td align="left">硬盘</td><td align="left">KINGSTON A2000 500GB</td></tr><tr><td align="left">机箱</td><td align="left">先马 黑金刚5</td></tr><tr><td align="left">电源</td><td align="left">SUPER FLOWER Leadex Gold 550W</td></tr><tr><td align="left">网卡</td><td align="left">INTEL Ethernet Controller I225 2.5G PCIe</td></tr><tr><td align="left">CPU散热</td><td align="left">THERMALRIGHT Peerless Assassin 120 SE ARGB</td></tr><tr><td align="left">机箱散热</td><td align="left">COOLMASTER SICKLEFLOW 120 ARGB x6</td></tr><tr><td align="left">显示器</td><td align="left">AOC I2490VX x2</td></tr></tbody></table><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><table><thead><tr><th align="left">部件</th><th align="left">型号</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="left">INTEL Xeon™ Processor E3-1265L</td></tr><tr><td align="left">主板</td><td align="left">INTEL DQ77KB</td></tr><tr><td align="left">内存</td><td align="left">SAMSUNG 16GB(8GBx2) 1600C11</td></tr><tr><td align="left">硬盘</td><td align="left">山寨 MSATA 128GB</td></tr><tr><td align="left">机箱</td><td align="left">狼队 G4</td></tr><tr><td align="left">电源</td><td align="left">FSP 90W DC</td></tr><tr><td align="left">网卡</td><td align="left">INTEL 82574L <br> INTEL 82579LM <br> HUAWEI E173 7.2M 3.5G USB</td></tr><tr><td align="left">CPU散热</td><td align="left">JONSBO HP400S  <br> ID-COOLING TF-9215-K</td></tr></tbody></table><blockquote><p>已闲置 <del>PVE 5.4-3，运行了一个 OpenWRT 和 一个 Debian。USB网卡用于SMS接码。</del> 。</p></blockquote><table><thead><tr><th align="left">部件</th><th align="left">型号</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="left">AMD Ryzen 5 5500U</td></tr><tr><td align="left">内存</td><td align="left">RAMAXEL 8GB 2400C14</td></tr><tr><td align="left">硬盘</td><td align="left">Lenovo SL700 128GB</td></tr><tr><td align="left">网卡</td><td align="left">Intel Corporation Ethernet Controller I226-V (rev 04) <br> Intel Corporation Ethernet Controller I226-V (rev 04) <br> HUAWEI E173 7.2M 3.5G USB</td></tr></tbody></table><blockquote><p>某国产山寨小主机，AIO。</p></blockquote><table><thead><tr><th align="left">部件</th><th align="left">型号</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="left">INTEL Celeron J4125</td></tr><tr><td align="left">主板</td><td align="left">畅网 X86-P2</td></tr><tr><td align="left">内存</td><td align="left">RAMAXEL 8GB 2400C14</td></tr><tr><td align="left">硬盘</td><td align="left">Micron 1100 1TB <br> 海康威视 WD40PURX 4TB x4</td></tr><tr><td align="left">机箱</td><td align="left">3D打印机箱QNAS4</td></tr><tr><td align="left">电源</td><td align="left">明纬 GST90A</td></tr><tr><td align="left">机箱散热</td><td align="left">NOCTUA NF-F12</td></tr></tbody></table><blockquote><p>物理黑群晖，2.5G双网卡。</p></blockquote><h2 id="网络设备"><a href="#网络设备" class="headerlink" title="网络设备"></a>网络设备</h2><ul><li><del>AP：中兴 ZXHN E2633 x2</del></li><li>AP：TP-link 7DR5160</li><li>AP: TP-link 7DR5130</li><li>AP: TP-link 7AP5100HI-POE</li><li><del>交换机：腾达 TEG1016D 16口千兆</del></li><li>交换机：Tenda TEM2021F 10口2.5G</li></ul><h2 id="移动设备"><a href="#移动设备" class="headerlink" title="移动设备"></a>移动设备</h2><ul><li>SONY Xperia 1 III</li><li>VIVO S16E</li><li><del>SONY Xperia XZ3</del></li><li>SONY WF-1000XM5</li><li><del>SONY WF-1000XM3</del></li><li>OPPO Watch 2 ECG</li><li><del>XIAOMI Mi Band 5 NFC</del></li></ul><h1 id="软件-amp-服务"><a href="#软件-amp-服务" class="headerlink" title="软件&amp;服务"></a>软件&amp;服务</h1><h2 id="订阅制-amp-增值制"><a href="#订阅制-amp-增值制" class="headerlink" title="订阅制&amp;增值制"></a>订阅制&amp;增值制</h2><ul><li>Spotify</li><li>Youtube Premium</li><li>1Password</li><li><del>Netfilx Premium</del></li><li>黑域</li><li><del>Nova Launcher Prime</del></li></ul><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><ul><li>oh-my-posh</li><li>Spicetify</li><li>NanaZip</li><li>Implay</li><li>FanControl</li><li>Kiwi Browser</li><li>Material Filse</li><li>Findroid</li><li>Jellyfin</li><li>GKD</li><li>Neo Store</li><li>Breezy Weather</li><li>Fcitx5 for Android</li><li>Fcitx5 for Android(RIME Plugin)</li><li>PiliPala</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我又换域名了</title>
      <link href="/New-Domain/"/>
      <url>/New-Domain/</url>
      
        <content type="html"><![CDATA[<p>2015年的时候，我创建了这个站，2016年4月份的时候，我选择在海外另起炉灶，于是购买了新的Pro域名，首年3$，第二年开始续费就是11$了，如今到了2024年我又该续费的时候，此时价格已经涨到了22$，这Pro域名短短几年时间就价格翻了倍。<br>22$的价格，按今天3月5号的汇率来说158CNY，对于商业或者盈利项目来说，200洒洒水，可对我来说，不值得。<br>Pro这个域名陪了我多年，其实上面就3个解析，一个博客，一个网盘，一个回家的VPN入口，因为不盈利，纯粹的自用，我搞个免费的二级域名或者说6位数字的XYZ都是可以的，所以就目前20$的价格，未来注册局只会越来越贵，真不那么值得。<br>你问我是否舍不舍得，我心里还是会不舍，毕竟一个陪伴了8年的域名，并且域名又是挺好记和输入的，还有各种访问记录，各种被Google收录，如今都要放弃了。如果时间回到8年前，哪怕当初注册是20$我也会注册，可如今我的钱比那时的还在读书的我多得多，但是因为想着结婚生子，想着家庭，这20$也就觉得不值得，多买点排骨吃不好么，可能这就是中年油腻男吧。<br>最后为啥选link这个域名，首先是因为便宜，续费4$，真的便宜，其余的短域名，要么不支持隐私防护，例如in和us；要么地区限定，例如de,uk；要么21$的续费例如vip。<br>希望这个域名可以陪伴的更久点吧。  </p><p>再见<code>ygin.pro</code>，你好<code>ygin.link</code>  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 站点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时隔七年，我终于弄了人生第一台NAS</title>
      <link href="/DIY-NAS/"/>
      <url>/DIY-NAS/</url>
      
        <content type="html"><![CDATA[<p>又到了618，每年一到618的前夕，各个论坛社区里总有人会提到NAS这个东西。NAS，故名思意就是个存储，只是人们越来越让它干非存储的事，All in One有它的优势也有它的不足，每个人有每个人的需求，但是请记住，不要给自己创造需求，希望这篇博客可以让你拔草&#x2F;种草。  </p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>就如标题那样，其实我第一次萌生需要一个NAS已经是7年前的事了，没错群晖的DS916+发布后我就种草了，但是当时我对存储的需求是什么，下载和存储影视。其实我一直都有下柯南来看的习惯，即便我拥有柯南的正版流媒体账户。柯南我从13年重新开始追，我一直都是观看的某字幕组压制的版本，为什么我不选择官方正版的字幕呢？因为官方字幕曾经出现过剧透的翻译问题，并且还是在剧场版里。随便说下，剧场版送审时提交的版本为该字幕组翻译的版本，而上映时却采用的八一厂的翻译。<br>这就是我7年前的需求，很简单，于是我采用我2013年时的方案，USB挂载硬盘进行冷备，并且这个方案实施了七年。<br>而我现在的需求发生了哪些变化？</p><ul><li>需求的存储空间越来越大</li><li>我购买了一个性能非常强劲的Android TV盒子</li><li>Google drive的存储规则修改 免费的云空间不够我未来使用</li></ul><p>而相当于七年前，我软硬件环境又有了哪些变化？</p><ul><li>宽带100M&#x2F;10M 升级为 1G&#x2F;50M</li><li>公网IPV4，DDNS，OpenVPN</li><li>全屋WiFi6覆盖，老旧2.4G设备全部更新淘汰</li></ul><p>于是我决定我需要购置一款NAS，但是选NAS时，我遇到了一些问题。  </p><ul><li>群晖等国际大厂的家用NAS，硬件不够卷，即便不考虑“智商税”的部分，其硬件规格真的只是满足当年设备需求。  </li><li>国产NAS，硬件够卷，用户入口侧的APP也卷，但是因为隐私性，对不起我用不起。  </li><li>DIY NAS，我有能力和精力维护。</li></ul><p>自己DIY NAS有个最大问题，箱子。DIY的NAS并没有像成品NAS那样拥有紧凑的机身，大、贵是很多箱子的特征，选来选去，我选中了一套3D打印的方案<a href="https://github.com/thunder439/QNAS4">QNAS4</a>，4盘位的机箱（内部可额外加装两块2.5寸的硬盘）  </p><h1 id="组装"><a href="#组装" class="headerlink" title="组装"></a>组装</h1><p>该项目有提供BOE表，自行购买即可，说几个注意点吧  </p><ul><li>该开发板使用的是<code>J4125</code>，根据<a href="https://www.intel.com/content/www/us/en/products/sku/197305/intel-celeron-processor-J4125-4m-cache-up-to-2-70-ghz/specifications.html">Intel Ark</a>上的说法，最大内存为8G，因为该开发板为单根内存槽，如果插入单颗粒大小2G的内存，可能无法点亮，建议采用单颗粒1G，8G 2400的内存条  </li><li>虽然板子有自带PWM风扇的转接线，但是我并没有在BIOS里找到风扇曲线调整，并且在DSM7里也提示不支持PWM风扇。</li><li>关于jmb585转接卡，建议购买大厂，并且安装后尽量不要再去插拔，易损坏。</li><li>集成硬盘背板有个安装教程，可以找卖家索取，其余的部分真的很简单，基本上你拆过笔记本清灰那么你就有能力装它。</li></ul><h1 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h1><p>DIY NAS除了高度可定制硬件规格，还有就是可自行安装各种操作系统。我这里选择的系统为群晖DSM7.2,选择黑群晖很简单，一是我的设备的硬件规格不配玩truenas，二是其规格和群晖的DS920+高度接近，群晖多两个M.2硬盘位，我的NAS则是两个2.5G的网卡。<br>有的人可能会说，你这个NAS并没有比成品NAS强在哪啊，新的成品NAS已经开始采用12代处理器了，你这个还是10代处理器了，除了双2.5G网卡没有任何强势点。是的，这套配置其实就是CPU是我觉得毕竟拉跨的地方，但是想想，作为存储<code>J4125</code>的不够他跑满2.5G网卡吗？8G的内存也足够DSM7.2+Jellyfin+qBittorrent运行了。最重要的是我花了950得到了一个拥有的猫扇的小体积NAS，这个NAS其实就是为了机箱的妥协。如果不是机箱的束缚，谁不想用N100&#x2F;N305做NAS呢。<br>群晖我这用的引导项目是<a href="https://github.com/wjz304/arpl-i18n">arpl-i18n</a>，注意该项目截至2023年5月30日并没有集成<code>J4125</code>集显驱动，如果你需要用集显，请自行下载集显驱动。  </p><h1 id="部署Docker"><a href="#部署Docker" class="headerlink" title="部署Docker"></a>部署Docker</h1><p>在DSM7.2中docker已经升级更名为Container Manager，支持了Docker Compose。如果你的访问访问国际互联网存在问题，请使用微软的<code>https://dockerhub.azk8s.com</code>镜像服务。<br>关于Jellyfin的docker镜像，可以选择<a href="https://hub.docker.com/r/nyanmisaka/jellyfin">nyanmisaka</a>打包分发的版本，或者选择<a href="https://hub.docker.com/r/jellyfin/jellyfin">jellyfin</a>的官方分发，一个拥有良好社区环境的支持的版本才是值得信赖并使用的版本。  </p><h1 id="长时间使用报告"><a href="#长时间使用报告" class="headerlink" title="长时间使用报告"></a>长时间使用报告</h1><p>2024&#x2F;03&#x2F;15更新 </p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="硬件部分"><a href="#硬件部分" class="headerlink" title="硬件部分"></a>硬件部分</h3><ul><li>M2转SATA的转接卡<code>JMB585</code>可能因为机箱的打印精度的问题，导致可能会因为重力、外部震动等关系，导致整个<code>JMB585</code>接触不良，硬盘全部脱机，Raid降级等问题，需认真考虑NAS的摆放。</li><li><code>JMB585</code>发热量不低，NAS存放环境风道不好的话，建议安装被动散热器，且考虑3D打印机箱的精度问题。</li><li><code>J4125</code>发热量不大，无需额外安装被动散热，可能摸着温度不是很低，但是请放心，它不会得新冠。  </li><li>开发板的BIOS里面的风扇调整比较简单，手动固定某个值百分比即可，我是选择固定了一个800转的猫扇，手放在硬盘仓前，即便装满4块盘也可以感觉到很明显的吸力（我的选择是风扇排风，直接将硬盘的废热排出机箱）。</li></ul><h3 id="软件部分"><a href="#软件部分" class="headerlink" title="软件部分"></a>软件部分</h3><p><em><strong>软件部分里提到的BUG，非常主观性，且不一定在所有类似的场景里都能复现，但在我所拥有的这套软硬件环境个体里是可复现的</strong></em></p><ul><li>我安装DSM时为2023年5月，当时DSM的正式通道还是<code>DSM7.1.1</code>,<code>7.2</code>为RC版本，我从<code>7.1.1</code>，升级到<code>7.2 RC</code>后，因模拟的机型为<code>DS920+</code>，其使用了新的特性<code>WriteOnce</code>，而我的设备上出现了什么bug呢？创建共享文件夹这个功能不正常，选加密的时候有且仅有在选择<code>WriteOnce</code>时才能创建成功，其余都不行，若选择跳过也自动创建的是<code>WriteOnce</code>文件夹。于是当时我选择回滚到<code>7.1.1</code>。而到了11月份我重新烧录新的引导，且升级安装<code>7.2</code>的正式版本时，这个BUG依旧存在。甚至我改机型为<code>DS918+</code>且格盘安装后创建非加密的共享文件夹也会报<code>WriteOnce</code>的错，但是再次创建就可以创建成功。<em><strong>此案例我没有在社区找到任何类似的案例</strong></em>。</li><li>Docker下的Jellyfin，<code>J4125</code>的GPU为<code>UHD 630</code>，虽然<code>J4125</code>的CPU部分架构为<code>Gemini Lake Refresh</code>，大家爱称呼它为第十代CPU，但是它的iGPU其实是<code>Gen9.5</code>，而10代CPU里面既有9.5代，例如<code>i9-10980HK</code>，也有11代，例如<code>i7-1065G7</code>。按照社区查到资料，Linux下内核添加<code>i915.enable_guc=2</code>后可以使用<code>Low-Power H.264</code>，但是我开启失败了。  </li><li>Jellyfin里的刮削时候，我刮削了詹子萱这位演员在豆瓣的数据后，无法在web界面编辑其信息，且点击她查看详细信息时Jellyfin一直转圈，Jellyfin打印的日志也报错，删除<code>library.db</code>后重新刮削也有这个问题。</li></ul><h3 id="非NAS部分"><a href="#非NAS部分" class="headerlink" title="非NAS部分"></a>非NAS部分</h3><p>我使用的非大陆地区销售的类原生Android Phone和TV以及Windows PC，使用Android TV观看海外正版影视作品时，各种特性均能正常工作（论花钱认证的重要性）。然而我使用它们在Jellyfin观影时灾难就来了。  </p><ul><li>Android上的ExoPlayer可以正常的播放HDR、杜比等影片，但是Exoplayer对于字幕的支持极差。</li><li>在Android上使用MPV播放时，虽然对于字幕有了更完善的支持，但是HDR、杜比等均不支持。  </li><li>Android下的Kodi硬解杜比仅支持部分格式（注：硬解需要设备过认证）。  </li><li>B站的ijkplayer放国产剧的时兼容性更好，但是设备功耗会更高，至于HDR、杜比等特效没测试。</li></ul><p>希望Android这部分的生态能加强吧，能早日推出Infuse这种级别的APP吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> DIY </tag>
            
            <tag> NAS </tag>
            
            <tag> docker </tag>
            
            <tag> DSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OPPO Watch 2 ECG 体验</title>
      <link href="/OPPO-Watch-2-ECG/"/>
      <url>/OPPO-Watch-2-ECG/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/EnrmRZV.png"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第一次了解到智能穿戴设备是<code>Moto 360</code>,一款2014年发布的产品,搭载的是<code>Wear OS</code>,记得当时我使用的手机还是<code>Moto X 2014</code>,按照现在的说法来说可以叫做生态链联动了吧,记得当时Google 还为<code>Wear OS</code>推出了专门的中国大陆版,然而并没有让智能穿戴设备流行起来.<br>后来小米推出的小米手环,我也在2020年购入了小米手环5NFC,之前吐槽小米的文档的档案已经丢了,在我使用第三方管理APP之后,小米手环5NFC也养成我很多习惯,不仅仅是门禁,久坐提醒,消息推送等等都能满足我的需求,但是随着时间的流逝,我慢慢喜新厌旧.屏幕磨损,没有血氧,不能查看快递信息,屏占比太低,一些临时性的闹钟设置什么的要依靠手机APP才更加顺手(我都用手机了为啥还要用你设置单独的闹钟),形象穿搭等等.于是我购入<code>OPPO Wacth 2 ECG</code>.  </p><h1 id="购入"><a href="#购入" class="headerlink" title="购入"></a>购入</h1><p>因为我有使用智能手环的两年多的时间,所以对于新购的智能手表就一定不能很手环.其实<code>Apple Watch</code>是个好选择,但是我使用的是Android,不是iPhone,激活设备都是一个大问题.华为呢,产品也很棒,但是双系统不是并行的,而OPPO的平时都是双系统运行,仅仅从纯RTOS(轻智能模式)切回Android时才需要重启.<br><code>OPPO Wacth 2</code>发布于2021年7月,ECG版本则是9月.我购入时间2022年6月,经过一年的更新,看看这块表到底现在如何.</p><h1 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h1><h2 id="使用习惯"><a href="#使用习惯" class="headerlink" title="使用习惯"></a>使用习惯</h2><p>要提到使用体验,那么肯定和使用习惯有关.作为一个长时间使用电脑进行办公娱乐的人,我使用手机更多的时一些琐碎的时间,例如吃饭\通勤等等,因为电脑在身旁,在通讯通知等方面手机最主要的就是打电话,至于锻炼运动,我也就是站起来简单的活动活动那种,跑步什么的因为膝盖伤基本不会的.所以我不会和现在很多人一样,我大部分的时间依赖的还是传统PC而不是手机.</p><h2 id="续航"><a href="#续航" class="headerlink" title="续航"></a>续航</h2><p>之前使用的小米手环5NFC,官方宣传时间是14天,我后期日常使用下来11天左右.购入OPPO时,官方宣传全功能4天,轻智能模式16天.而我的使用设置下(全功能模式自动亮度+蓝牙+24h心率+久坐+睡眠血氧+睡眠REM+NFC),使用时间大约3.5天,注意我并没有非常极限去测试续航,仅仅一个肉估,不过我可以举一个例子,某天下午5点出门娱乐,手环电量13%,第二天上午11点我醒来时手环电量3%,请注意:手环厂商的每1%的电量不是相同的,并且低于某电量时会进行一些功能限制提高续航的,所以这个全功能的续航应该足够3.5天使用的.因为我习惯于洗漱洗澡时充电,基本上20分钟能冲大半(手表的快充用PD即可激活),就可以满足48H的使用.如果你也纠结其他智能手表的续航和充电,那么OPPO真的可以让你省心很多,当然和纯RTOS的手环来比肯定不行.<br>至于轻智能模式的RTOS,因为不支持NFC和支付,我并没有正式使用过该模式.  </p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p><code>OPPO Wacth 2</code>全智能模式搭载的是基于Android 8.1定制的系统,而1代的海外版搭载的<code>Wear OS</code>,注意:<code>Wear OS</code>虽然是Android系统的分支,但是其明显是针对智能穿戴设备设计,而<code>OPPO Wacth 2</code>搭载的Android系统,按照欢太APP在play store上的评论回复其更接近于传统的手机系统(仅仅的官方回复暗示,我没有去收集相关的代码级证据).<br>既然认定是手机系统,那么有好有坏,好处呢就是给用户自己的操作空间更大,例如可以自行安装传统手机APP.坏处呢,一是Android版本太低,先不考虑安全更新这种东西,8.1很多APP都装不上去了,并且也有装上去遇到DPI兼容性问题,第二个放弃wearos那么也就是放弃了市面上已经有的手表APP.<br>关于系统设置,深度定制的Android 8.1,将一些系统设置UI也做了替换,特别是查看WIFI IP,MAC,手动设置IP等等完全不行,只能通过第三方的方式将原本的Android设置弄出来进行操作,不过这些设置真的一般用不到的,我只是因为要配置和测试东西时用下罢了.<br>关于ADB,打开ADB还是很简单,但是因为是8.1,默认没有基于无线的ADB,只能通过ADB命令去监听TCPIP端口,KILL掉相关服务就失效.并且没有撤销ADB权限这个功能,如果你不小心给某终端了永久权限,那么就无法取消,这是很严重的安全隐患. <del>连某关键服务的真实accesskey都能被发在CSDN的教程贴里,可想而至大家的网络安全意识真的差</del>  </p><h2 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h2><p>既然是智能手表,那么APP是智能体现的一个非常大的方向,先说官方软件市场里提供的APP,你要说少呢,不少也那么多了,但是我们仔细看看会日常使用的是哪些呢,微信\QQ,完了,你说还有什么支付宝,健康运动啊,快递100啊,喜马拉雅等等.没错,支付宝你除了付款那你还干嘛?健康运动,对于在运动的人来讲很好,但是我并没有运动的习惯,我只有活动.快递100这个就是我最想吐槽的东西,我下好快递100,打开竟然提示在手机APP绑定扫描后使用,我都用手机APP了用你干啥?而在手机端菜鸟靠着强耦合不比你快递100用的更多,只能说PM脑子有病,(BTY,手表上的快递100的开发商是OPPO).听歌这边,我说过因为放弃wearos那么也就没有了wear os版的Spotify.至于微信,后面描述手机APP的推送时在一起说吧.<br>啊,你说QQ?QQ是IM软件啊,人家IM是可以在PC上用的啊,不和微信这种手机APP一样啊,聊天记录都不存储.<del>网安法了解下</del></p><h2 id="手机APP"><a href="#手机APP" class="headerlink" title="手机APP"></a>手机APP</h2><p>其实用户拿到手表后,进行绑定激活反而一开始就会接触到手机APP,我之所以放到后面讲,是因为我觉得简直就是一场灾难,一场明显由手机APP设计逻辑实现等造成的灾难.<br>第一步下载APP,我通过说明书扫描下来APP是老版本,所以我要先让APP进行更新.难道在说明书上应个指向last版本的URL很难吗,就一定要文件绝对地址写死吗?国内硬件搞区别管理版本没问题,但是如果哪天那个URL删了,用户获取到的就是404?<br>手机APP更新完毕后我开始按照操作一步步设置,某些设置选项告诉你他需要什么权限用于什么事,ok,没有问题,但是APP提供的不给权限跳过该设置的选项,因为涉及到通讯录,麦克风等偏隐私信息权限,我一开始就选择不给权限然后跳过.OK一切很合理对不对.然后傻逼的事情来了,因为为了来电显示需要通讯簿权限,我后面给予了通讯簿权限,并且使用了通讯簿同步功能,照例来讲我这时手表来点就该显示通讯簿名字了吧,然而我可以告诉你,不会,手表上不会同步通讯簿内容,无论是重启手表,重启手机,清除手机APP数据重新设置都不行,只能重置手表(我原本想断开绑定重新绑定,但是手表默认设置就是断开绑定自动清空数据.).<br>然后就是消息推送功能,这里的消息推送指的是”同步手机通知”,APP里面可以选择讲哪些手机APP的通知同步过去,例如短信啊,QQ啊什么的.当我们在手表上看到手机通知推送后,如果你在手表上划掉该推送,他会将你手机上该推送也划掉.其实产品的本意是如果是不重要的或者重要的推送你在手机上处理后两边同步了没问题,但是手表上的受到的推送不止手机同步通知,还有部分是手表自己发出的通知,例如久坐啊什么的.既然是同步通知,明明手表的通知的集合只是部分和手机的集合相交,为何对于相交的部分要采取PULL+PUSH而不是仅PULL?划掉信息不等于确定信息,还包括略过信息.略过信息可能只是因为该信息不适合在手表上.<br>然后就是微信.oppo上的微信是微信儿童版,能独立又不像手机微信那么多功能.而让我最感到恶心的就是这个手表微信,要知道手表微信可是oppo的一个卖点,那我们来看看这个手表微信是做的多傻逼.第一,微信最重要的就是沟通,当你蓝牙链接到手机时,无论你是否由使用esim或者wifi,这时微信的消息推送不会独立,只会同步手机通知,如果你在PC微信开启了手机免通知,或者你手机微信限制了后台运行.那么恭喜你,你手表永远不会收到微信的信息.如果你手机有收到微信的信息,那么你手机也会同步相关通知,并且手表上还会提示打开APP,这是原以为一个让你快速查看信息回复信息的功能,但是你点击打开APP,他真的只是仅仅打开APP,显示你上一次操作的界面,并且打开后还有等聊天记录同步,当你以为聊天记录同步完成后会自动定位到点开消息人或者详细的聊天界面,不会,他还是停在你之前操作的微信界面,这时你要自己去找到那个联系人然后点开他.而如果你要微信自己独立通讯去获取信息推送,那么你需要,让手表链接wifi或者esim,然后断开和手机的蓝牙链接.如果你和我一样不满微信的hardcoder,想通过手表去获取微信的通知,那么你完全可以不考虑这个产品.<br>然后就是最后一点无关大雅的问题,就是手机欢太APP的DPI兼容性问题,我的手机使用的Sony Xperia 1 III,Android 12,HK地区版本,日常渲染是2560x1096,截图时为3840x1644,在使用环太APP整个界面就变的和老人机一样,一些overlay会出现错位的情况,不过无关大雅,日常基本不需要打开欢太健康.并且这个问题不止在我的手机出现,一些其他品牌的手机我在社区里也看到类似的问题.</p><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><p>简单说下:</p><ul><li>仿APPLE的外观不会丑.(我手上这块已经被很多人认为APPLE WATCH)</li><li>表盘不要设置彩色,请黑色,有大黑边(二代官方表盘让人眼前一亮很少的,并且第三方获取难度不低,官方也无开放制作工具)</li><li>镜面非常不耐磨,如果贴膜,46版本请十张起买,非常容易贴失败,并且很容易脱落.</li><li>官方不卖表带</li><li>ECG版本不知道是不是考虑了学生群体购买意图不大(官方软件市场里有大量面向义务教育阶段学生的APP,说明学生群体是一个非常重要的目标),所以默认一个黑色硅胶一个黑色皮质,看似主打商务,但是真的丑.</li><li>建议每次充电后进行酒精清洁\降温</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>从续航和开放度来讲,在2022年7月4日,他的平衡确实能称为表皇,但是在消息通知,特别是微信这边,他又显得没那么智能.在产品细节上面来讲,官方2499的定价,虽然ECG占了很大一部分,但是毕竟和最便宜的版本的是很多一样的,那么是把2499做成1299的细节,还是把1299做成2499的细节,我相信大家也都能明白了.如果你使用的是国产安卓,并且不介意hardcoder,并且有运动的习惯,那么你得到的正向反馈是比我多的.<br>对我而言,如果 oppo wacth 的未来产品有推出基于wear os的版本,或者RTOS加入支付和门禁,否则我的下一款智能穿戴型设备应该不会是OPPO.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 体验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好久不见</title>
      <link href="/Long-Time-No-See/"/>
      <url>/Long-Time-No-See/</url>
      
        <content type="html"><![CDATA[<h1 id="好久不见"><a href="#好久不见" class="headerlink" title="好久不见"></a>好久不见</h1><p>上一次写的文章还是2020年9月的小米手环5NFC的体验，而如今时间已经来到2022年的五一劳动节虽然这么多年下来就没好好的写的博客，但是这个域名还是做了一些诸如DDNS等东西，某天我在远程回家的时候发现连不上了，一解析才发现原来是域名过期了，匆匆忙忙续上费然后想着到五一写点东西更新下吧，就当我打开本子后才发现，之前装的manjaro早已被我重装了Windows了，里面的博客源文件早都没有了，感觉去翻以前的冷呗，才发现文章备份时间还是2019年7月，于是就重0构建。<br>不过这个这次我并不是在笔记本上搭建环境了，而是家里的一台Debian虚拟机上构建了，不仅仅是因为虚拟机有全盘快照计划，并且虚拟机上的文件也同步到一台存储上面，而将博客重新搭建后，我翻了翻以前的一些文章。</p><h2 id="怀旧"><a href="#怀旧" class="headerlink" title="怀旧"></a>怀旧</h2><p>怀旧，这两个字如果你游戏玩家，那么这几年你应该听到过这个词很多次，无论是 Remastered 、 Remake 还是丢人的 Reforged ，重置也是一种怀旧，更别提所谓的各种怀旧服，不仅仅有魔兽世界、传奇这种明显“大叔向”的怀旧服，连当年受众群是小朋友的塞尔号<del>我总是说成塞尔达</del>，都推出了怀旧服，果然怀旧是是全年龄向的<del>笑</del>。<br>翻以前的文章的时候，我翻到了这个<br><img src="https://ooo.0o0.ooo/2017/04/03/58e21cb45e8a0.png"><br>这图是来源于2017年4月3的文章，这个图是我上一个境内站当时的截图，当年也是在那台服务器上瞎搞瞎弄，当时站点好像是2015年五一前夕搭建的，所以这文章是7周年纪念日？当时其实又要考虑是否把之前的内容搬到这个站上面，想想算了，当年也是傻，域名到期后没去注销备案，然后被人抢注后顶着我的备案瞎搞。<br>其实还是有很多文章记录了很多东西，例如多说美化CSS，没错当年多说凭借着分享到微博这功能可以说是那下了国内最大的份额，那时多少想着是如何打破信息孤岛，串联世界，而现在的互联网全是孤岛。还有代码，以前文章里面不仅仅有一些代码的实现，也有对系统架构的分析与理解，而如今在运维岗的多，自己手写的最多的代码反而是魔兽世界的插件，这次翻新，把之前的一些博客删除了，不仅仅涉及到隐私，还有部分内容是违法的，例如分析某APP的API，既然法律部门没找上来，我也还是识趣的删了吧。<br>真简简单单的随笔，完全不知道自己写了啥，纯粹就是流水账。这两年拍视频不就是以前的写博客吗，当初给自己说的拍vlog，如今快4年了我还是仅仅建好了文件夹。<br>最几年心态的转变还是太大了，作为一个奔三的“中年人”，希望自己别那么油腻吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己动手做一台软路由</title>
      <link href="/ProxmoxVE-and-LEDE/"/>
      <url>/ProxmoxVE-and-LEDE/</url>
      
        <content type="html"><![CDATA[<p>基于<code>Proxmox VE</code>平台搭建一台<code>LEDE</code>软路由  </p><span id="more"></span><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>随着境内网络的发展，目前来讲搭载ARM的路由器越发不能满足自己的需求，而机房设备又因其工作环境不适合大众家用，于是自己动手组装一台X86的PC作为软路由。  </p><h1 id="确定方案"><a href="#确定方案" class="headerlink" title="确定方案"></a>确定方案</h1><p>简单来说方案就两种，一种是物理机直接安装路由系统，好处就是不存在虚拟机的性能损耗，不会出现个别硬件在虚拟化后直通单独，缺点就是想对于虚拟化来讲没有一个方便的快照系统。而虚拟化后生小鸡装虚拟机的好处就是可以快照，不怕搞蹦系统，可以在更加精确的按需分配小鸡的运算资源，可以开多个小鸡实现不同系统合一，缺点就是性能损耗以及部分硬件的直通难度。<br>我目前的采用的方案是虚拟化开小鸡的方案  </p><h2 id="购买硬件"><a href="#购买硬件" class="headerlink" title="购买硬件"></a>购买硬件</h2><p>因为确定了采用虚拟化的方式，所以那么CPU肯定要选支持<code>VT-d</code>这种硬件虚拟化的技术，作为软路由，<code>THIN ITX</code>的工控主板也是有优势的，<code>Intel</code>的网卡的优先级也是比较高的。<br>最后的我的硬件配置为E3-1265L+DQ77KB+8G 1600+128G（MSATA）<br>在咸鱼花了750收了一台成品乱路由，但他的CPU为是奔腾的G2100T，于是自己的在某福报网站上购买了一个<code>E3-1265L</code>，这颗CPU在<a href="https://ark.intel.com/content/www/us/en/ark.html">Intel Ark</a>上都找不到的，在<a href="https://www.chiphell.com/thread-1904567-1-1.html">Chiphell</a>能找到一些相关测试，4C8T2.4G的性能来讲作为软路由完完全全可以满足我的性能需求了。AIDA64单烤FPU的温度78左右，emmm后面换个IS-30吧<br>主板DQ77KB这个板子其实一直处于涨价的阶段，以前才200+现在淘宝能找到的基本都是500了，这个板子自带两个Intel千兆网卡且有一个网口支持AMT，可以自己再加一个MINI-PCIE的无线网卡,虽然板子支持MSATA的SSD，但是其为SATA2，所以性能也不会咋地，跑个软路由够了，支持DC供电。<br>内存和硬盘都是成品里自带的，都是杂牌，颗粒也不想查了，在win10 1903下用AIDA64跑了下内存延迟是160,emmm等那天条子挂了再换吧  </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装虚拟化平台"><a href="#安装虚拟化平台" class="headerlink" title="安装虚拟化平台"></a>安装虚拟化平台</h3><p>这里虚拟化平台使用的是<a href="https://www.proxmox.com/">Proxmox Virtual Environment</a>（以下简称<code>PVE</code>）,PVE是一款基于<code>Debian</code>的开源服务器虚拟化环境，支持LXC和KVM，虽然是开源的，但是会提示购买授权。<br>安装PVE的过程很简单，去官网下载镜像然后引导安装即可，设置IP时一定要设置好，因为PVE安装后不支持DHCP，所以安装的时候只插一个网口，而这个网口就是LAN口，网关地址可以设置为你即将安装的软路由的LAN地址。但是我安装时遇到了问题，我当时安装时官方最新的发行版本是6.0.4（写稿时发现官网已回滚6.0.1），当时6.0.4在引导进入安装界面后无法进行安装操作，安装程序无法正常启动显示，于是我改安装的5.4.3（看了眼官网5.4.3的也回滚5.4.1了……），就能成功安装了。  </p><h3 id="部署虚拟机"><a href="#部署虚拟机" class="headerlink" title="部署虚拟机"></a>部署虚拟机</h3><p>首先将其他网卡的网口映射&#x2F;直通进来，方便后面给虚拟机。<br>我采用的软路由系统为<code>koolshare</code>修改的<code>LEDE</code>,<code>LEDE</code>是以前人们不满足<code>OpenWRT</code>而新开的分支，如今已经合并了，目前<code>LEDE</code>的状态是<a href="https://en.wikipedia.org/wiki/OpenWrt#Releases">Older version, still supported</a>，我选择的镜像为koolshare提供的虚拟机磁盘镜像。  </p><p>在PVE里根据自己的物理机与实际需求创建好虚拟机，因为我采用的是虚拟机磁盘镜像，在创建好虚拟机后，将虚拟机的磁盘删除后，在物理机的里添加硬盘</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm importdisk $虚拟机编号 $上传的虚拟机磁盘镜像 local-lvm</span><br></pre></td></tr></table></figure><p>添加硬盘后对编辑LEDE的虚拟机硬件将刚才导入的磁盘绑定进去开启虚拟机即可</p><h3 id="配置LEDE"><a href="#配置LEDE" class="headerlink" title="配置LEDE"></a>配置LEDE</h3><p>将虚拟机的WAN口与猫的互联网口相连，然后在LEDE里指定端口，然后就和配置传统路由器一样了，配置完后记得在PVE里保存快照</p><h2 id="总结体验"><a href="#总结体验" class="headerlink" title="总结体验"></a>总结体验</h2><p>虽然我全文没有一个图，甚至连一个详细的配置方式都没有，但是我把我遇到的坑和关键点也出来了，因为无论是安装PVE还是设置虚拟机绝大部分都是一些非常常规的操作，关键点写出来就行了。我的给我的虚拟机的配置是4C4T+4G，这个配置跑软路由性能过剩了，体验相对于之前的AC68U完完全全强太多了，之前的68U开启服务后，一段时间后就会变的很慢，连1080P60FPS的YouTube都看不了，而软路由没遇到这个问题，跑了几天了晚上高峰期2KYouTube依旧可以随意拖拉，而在lede自己跑BT跑满本地带宽（100M）的情况下，虚拟机的CPU占用不到16%</p>]]></content>
      
      
      
        <tags>
            
            <tag> LEDE </tag>
            
            <tag> ProxmoxVE </tag>
            
            <tag> OpenWRT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用树莓派做一个短信收发平台</title>
      <link href="/raspberry-pi-sms/"/>
      <url>/raspberry-pi-sms/</url>
      
        <content type="html"><![CDATA[<p>手机短信里全是推广或者验证码信息？有多的卡或者异国他乡不方便使用以前的卡？那就就用树莓派做一个短信收发平台吧  </p><span id="more"></span><h1 id="前情介绍"><a href="#前情介绍" class="headerlink" title="前情介绍"></a>前情介绍</h1><p>现在境内随随便便注册个啥都需要验证手机，然后短信就成为了广告推广的重灾区，随随便便拿出手机，短信收件箱99%都是广告推广，今天狗东告诉你啥啥啥促销了，明天爱奇艺告诉你VIP也打折了，后天你之前在天猫之前买的店家告诉你他们又要打折了了，接下来又有银行说现在办信用卡有活动了……然后随着微信等社交软件的发展，手机短信真的就成为了一个天然的广告地。<br>我手里有两张卡，一张用了多年的移动和一张两年的联通，为什么会开一张联通，因为我使用的是非国行手机，联通的FDD-LTE和WCDMA比移动的TD-LTE体验好很多。两张卡的后果就是手机收到垃圾短信的次数变得更多，于是我想改变这个情况——用树莓派接收短信并通过Telegram Bot发送给我的Telegram。</p><h1 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h1><p>首先，要将sim卡接到树莓派上就需要买GSM模块，然而我搜了下模块的价格，打扰了，于是我去想到了去购买USB的sim网卡，在 <a href="https://wammu.eu/smsd/">Gammu SMSD</a>的<a href="https://wammu.eu/phones/">数据库</a>里，找了下兼容设备后，我购买了华为的<code>E173</code><br><a href="https://wammu.eu/smsd/">Gammu SMSD</a>是一个用来接收与发送短信的服务，可以运行在树莓派上<br>我手里的树莓派是树莓派3B+，使用的是<code>Broadcom BCM2837</code>，这是一个64位的SOC，网上一直传着64位系统的性能可以达到32位系统的30倍，然而树莓派官方却没有为他推出64位的操作系统，我在网上找到人社区为3b+维护的64位的Centos和ubuntu都有或多或少的问题，于是这次把系统换回了官方系统<del>其实我这次有尝试Manjro-ARM，但是在配置port时总访问不了，有知道怎么解决的请在下面告诉我</del>。<br>我个人推荐大家使用root账户进行安装配置，我一开始用的普通账户+sudo的方式，但是Gammu SMSD服务起不起来，全程root账户后就一切正常了。  </p><p>将USB网卡插在树莓派上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看USB设备</span></span><br><span class="line">~ $ lsusb </span><br><span class="line">Bus 001 Device 006: ID 12d1:1436 Huawei Technologies Co., Ltd. Broadband stick</span><br><span class="line">Bus 001 Device 004: ID 0424:7800 Standard Microsystems Corp. </span><br><span class="line">Bus 001 Device 003: ID 0424:2514 Standard Microsystems Corp. USB 2.0 Hub</span><br><span class="line">Bus 001 Device 002: ID 0424:2514 Standard Microsystems Corp. USB 2.0 Hub</span><br><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br><span class="line"></span><br><span class="line">~ $ ls /dev/ttyU*</span><br><span class="line">/dev/ttyUSB0  /dev/ttyUSB1  /dev/ttyUSB2</span><br></pre></td></tr></table></figure><p>因为我是WCDMA网卡，会有三个，后面配置时使用ttyUSB0和ttyUSB2都能正常工作，但是我发现重启设备后，有时USB2会变成USB3而，0和1却依旧存在，于是我使用的ttyUSB0进行配置  </p><h2 id="接下来就是安装与配置软件"><a href="#接下来就是安装与配置软件" class="headerlink" title="接下来就是安装与配置软件"></a>接下来就是安装与配置软件</h2><h3 id="安装配置-Gammu"><a href="#安装配置-Gammu" class="headerlink" title="安装配置 Gammu"></a>安装配置 Gammu</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ $ apt install gammu</span><br></pre></td></tr></table></figure><p>使用 <code>gammu-config</code> 进行配置，具体的配置参数等请参考<a href="https://wammu.eu/phones/">设备文档</a>和实际USB段口配置，配置完后使用 <code>gammu --identify</code> 进行验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~ $ gammu --identify</span><br><span class="line">Device               : /dev/ttyUSB0</span><br><span class="line">Manufacturer         : Huawei</span><br><span class="line">Model                : E173</span><br><span class="line">Firmware             : </span><br><span class="line">IMEI                 : </span><br><span class="line">SIM IMSI             : </span><br></pre></td></tr></table></figure><h3 id="安装配置-Gammu-SMSD"><a href="#安装配置-Gammu-SMSD" class="headerlink" title="安装配置 Gammu SMSD"></a>安装配置 Gammu SMSD</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">~ $ apt install gammu-smsdrc</span><br><span class="line"></span><br><span class="line">~ $ vim /etc/gammu-smsdrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Configuration file <span class="keyword">for</span> Gammu SMS Daemon</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Gammu library configuration, see gammurc(5)</span></span><br><span class="line">[gammu]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Please configure this!</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请根据自己的实际情况修改配置</span></span><br><span class="line">port = /dev/ttyUSB0</span><br><span class="line">connection = at115200</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debugging</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">logformat = textall</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SMSD configuration, see gammu-smsdrc(5)</span></span><br><span class="line">[smsd]</span><br><span class="line">RunOnReceive=/root/receive-sms.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加收到短信后的操作</span></span><br><span class="line">service = null #如果需要保存短信请改为 files，并在下方那该确定文件位置</span><br><span class="line">logfile = syslog</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Increase <span class="keyword">for</span> debugging information</span></span><br><span class="line">debuglevel = 0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Paths <span class="built_in">where</span> messages are stored</span></span><br><span class="line">inboxpath = /var/spool/gammu/inbox/</span><br><span class="line">outboxpath = /var/spool/gammu/outbox/</span><br><span class="line">sentsmspath = /var/spool/gammu/sent/</span><br><span class="line">errorsmspath = /var/spool/gammu/error/</span><br><span class="line"></span><br><span class="line">~ $ cat /root/receive-sms.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">TOKEN=&quot;XXX&quot;</span><br><span class="line">CHAT_ID=XXX</span><br><span class="line">URL=&quot;https://api.telegram.org/bot$TOKEN/sendMessage&quot;</span><br><span class="line">for i in `seq $SMS_MESSAGES` ; do</span><br><span class="line">  eval &quot;curl -s -X POST $URL -d chat_id=$CHAT_ID -d text=\&quot;\$&#123;SMS_$&#123;i&#125;_TEXT&#125;\&quot;&quot;</span><br><span class="line">  done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这个脚本就是调用Telegram Bot的API发送消息</span></span><br></pre></td></tr></table></figure><h3 id="创建配置Telegram-Bot"><a href="#创建配置Telegram-Bot" class="headerlink" title="创建配置Telegram Bot"></a>创建配置Telegram Bot</h3><p>访问 <a href="https://telegram.me/botfather">BotFather</a>，根据提示按步骤创建属于自己的Bot，取得属于自己的Token。<br>然后用自己访问这个Bot，不是在<code>BotFather</code>，对他随便发句Hello World啥的。然后访问<code>https://api.telegram.org/botTOKEN/getUpdates</code>，把TOKEN替换成自己的Bot的Token，回返回一段JSON，然后找到<code>chat</code>下自己的<code>id</code>，替换上面脚本里的字段。然后执行<code>gammu-smsd</code>进行测试，给手机号发短信，看能不能自动转发到Telegram里，如果成功，就执行<code>systemctl start gammu-smsd</code> 让他开机自启吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> Telegram-Bot </tag>
            
            <tag> SNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最后一天</title>
      <link href="/Last-day/"/>
      <url>/Last-day/</url>
      
        <content type="html"><![CDATA[<p>随笔</p><span id="more"></span><h1 id="这不是这个站的最后一天"><a href="#这不是这个站的最后一天" class="headerlink" title="这不是这个站的最后一天"></a>这不是这个站的最后一天</h1><p>这个站已经成功续费+1Y了，今天是上一个境内站的最后一天。<br><img src="https://ooo.0o0.ooo/2017/04/03/58e21cb45e8a0.png"><br>用的阿里青岛的机房，两年时间过的也是很快，中间那个站不知道出了多少毛病，仅仅是一个当时连linux都不会的人折腾地，不会linux、php、html等还不是活不来了，对吧。</p><p>老站的多说，因为多说的问题挂了，新站又搞了多说，作为一个遇事不决就Google的人，我想说新站的多说要比老站好看很多很多。<br>然而，多说也挂了，这次是真的挂了。多说已经决定转型了，还好新站没有评论（唯一的一次也只是我们测试脚本，测试完就删了），所以转移到Disqus了。</p><p>Disqus好处就是自带图床，不用想多说以前那样我还要推荐图床。<br>被墙不是我的烦恼，因为他不仅可以过滤一部分人，还可以测试网络。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新家</title>
      <link href="/the-new-home/"/>
      <url>/the-new-home/</url>
      
        <content type="html"><![CDATA[<p> 新开了一个博客，原因很简单</p><ul><li>买了域名，但是服务器到期了。</li><li>买了域名，但是不想再去备案。</li><li>买了域名，但是不用感觉有病。</li></ul><p>刚好github page有免费的300M空间，搭个静态博客还是不错的。</p><p>毕竟是github，这边也应该会更加注重技术性方面的东西了，境内的博客我就用来放放照片装装逼什么的了。<br>虽然即将实习，但是我还是希望我会将这个博客经营下去，毕竟这个域名一年就几刀，服务器还不收费呢。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br> <span id="more"></span></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
